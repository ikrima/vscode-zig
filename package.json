{
  "name": "zig",
  "displayName": "Zig-Fork",
  "description": "Language support for the Zig programming language",
  "version": "0.2.17",
  "publisher": "ikrima",
  "private": true,
  "icon": "assets/zig-icon.png",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/ikrima/vscode-zig"
  },
  "categories": [
    "Programming Languages"
  ],
  "engines": {
    "vscode": "^1.70.0"
  },
  "main": "./out/bundle",
  "activationEvents": [
    "onLanguage:zig",
    "onCommand:zls.start",
    "onCommand:zls.stop",
    "onCommand:zls.restart",
    "onCommand:zig.build.runStep",
    "onCommand:zig.build.runLastTarget",
    "onCommand:zig.build.getLastTarget",
    "onCommand:zig.runTest"
  ],
  "contributes": {
    "taskDefinitions": [
      {
        "type": "zig_build",
        "required": [
          "stepName"
        ],
        "properties": {
          "stepName": {
            "description": "build step",
            "type": "string"
          },
          "label": {
            "type": "string",
            "description": "The name of the task"
          },
          "buildFile": {
            "description": "path to zig build file. Can be omitted.",
            "type": "string"
          },
          "args": {
            "description": "extra args to zig build",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cwd": {
            "description": "current working directory",
            "type": "string"
          }
        },
        "when": "shellExecutionSupported"
      },
      {
        "type": "zig_test",
        "required": [
          "label",
          "buildArgs"
        ],
        "properties": {
          "label": {
            "type": "string",
            "description": "The name of the task"
          },
          "buildArgs": {
            "description": "Test build args",
            "type": "object",
            "required": [
              "testSrcFile"
            ],
            "properties": {
              "testSrcFile": {
                "description": "path to zig test source file",
                "type": "string"
              },
              "mainPkgPath": {
                "description": "test filter",
                "type": "string"
              }
            }
          },
          "runArgs": {
            "description": "Debug Test launch args",
            "type": "object",
            "properties": {
              "debugLaunch": {
                "description": "Program working directory.",
                "type": "boolean"
              },
              "testFilter": {
                "description": "test filter",
                "type": "string"
              },
              "cwd": {
                "description": "current working directory",
                "type": "string"
              }
            }
          }
        },
        "when": "shellExecutionSupported"
      }
    ],
    "languages": [
      {
        "id":            "zig",
        "extensions":    [ ".zig" ],
        "aliases":       [ "Zig" ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language":  "zig",
        "scopeName": "source.zig",
        "path":      "./syntaxes/zig.tmLanguage.json"
      },
      {
        "language":  "zig",
        "scopeName": "markdown.zig.codeblock",
        "path":      "./syntaxes/zig-md.tmLanguage.json",
        "injectTo":  [ "text.html.markdown" ],
        "embeddedLanguages": { "meta.embedded.block.zig": "zig" }
      }
    ],
    "problemMatchers": [
      {
        "name": "zig",
        "label": "Zig Build",
        "owner": "zig",
        "source": "zigbuild",
        "applyTo": "allDocuments",
        "fileLocation": [ "autoDetect", "${config:zig.buildRootDir}" ],
        "pattern": {
          "regexp": "([^\\s]*):(\\d+):(\\d+):\\s+(?:fatal\\s+)?(note|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    ],
    "configuration": [
      {
        "type": "object",
        "title": "zig",
        "properties": {
          "zig.binary": {
            "description": "Set a custom path to the Zig binary. Defaults to 'zig' in your PATH.",
            "type": "string",
            "scope": "window",
            "default": "zig.exe"
          },
          "zig.buildRootDir": {
            "description": "The zig build root directory.",
            "type": "string",
            "scope": "resource",
            "default": "${workspaceFolder}"
          },
          "zig.buildCacheDir": {
            "description": "The zig build cache directory.",
            "type": "string",
            "scope": "resource",
            "default": "zig-cache"
          },
          "zig.buildOutDir": {
            "description": "The zig build output directory.",
            "type": "string",
            "scope": "resource",
            "default": "zig-out"
          },
          "zig.buildFile": {
            "description": "The path to build.zig. This is only required if zig.buildOptions = build.",
            "type": "string",
            "scope": "resource",
            "default": "build.zig"
          },
          "zig.enableTaskProblemMatcher": {
            "description": "Highlight lines where tests failed",
            "type": "boolean",
            "scope": "resource",
            "default": true
          },
          "zig.enableCodeLens": {
            "description": "CodeLens for zig tests",
            "type": "boolean",
            "scope": "resource",
            "default": false
          }
        }
      },
      {
        "type": "object",
        "title": "zls",
        "properties": {
          "zls.binary": {
            "description": "Path to `zls` executable. Example: `C:/zls/zig-out/bin/zls.exe`.",
            "type": "string",
            "scope": "window",
            "default": "zls.exe"
          },
          "zls.debugBinary": {
            "description": "Path to `zls` debug executable. Example: `C:/zls/zig-out-dbg/bin/zls.exe`.",
            "type": [
              "string",
              "null"
            ],
            "scope": "window",
            "default": null
          },
          "zls.enableDebug": {
            "description": "Enable debug logging in release builds of zls.",
            "type": "boolean",
            "scope": "window",
            "default": false
          },
          "zls.trace.server": {
            "type": "object",
            "scope": "window",
            "description": "Traces the communication between VS Code and the language server.",
            "properties": {
              "verbosity": {
                "type": "string",
                "description": "Controls the verbosity of the trace.",
                "enum": [
                  "off",
                  "messages",
                  "compact",
                  "verbose"
                ],
                "default": "off"
              },
              "format": {
                "type": "string",
                "description": "Controls the output format of the trace.",
                "enum": [
                  "text",
                  "json"
                ],
                "default": "text"
              }
            }
          },
          "zls.enable_snippets": {
            "scope": "resource",
            "type": "boolean",
            "description": "Whether to enable snippet completions",
            "default": false
          },
          "zls.enable_unused_variable_warnings": {
            "scope": "resource",
            "type": "boolean",
            "description": "Whether to enable unused variable warnings",
            "default": false
          },
          "zls.enable_import_embedfile_argument_completions": {
            "scope": "resource",
            "type": "boolean",
            "description": "Whether to enable import/embedFile argument completions (NOTE: these are triggered manually as updating the autotrigger characters may cause issues)",
            "default": false
          },
          "zls.zig_lib_path": {
            "scope": "resource",
            "type": [
              "string",
              "null"
            ],
            "description": "Zig library path",
            "default": null
          },
          "zls.zig_exe_path": {
            "scope": "resource",
            "type": [
              "string",
              "null"
            ],
            "description": "Zig executable path used to run the custom build runner. May be used to find a lib path if none is provided.",
            "default": null
          },
          "zls.warn_style": {
            "scope": "resource",
            "type": "boolean",
            "description": "Whether to pay attention to style issues. This is opt-in since the style guide explicitly states that the style info provided is a guideline only.",
            "default": false
          },
          "zls.build_runner_path": {
            "scope": "resource",
            "type": [
              "string",
              "null"
            ],
            "description": "Path to the build_runner.zig file.",
            "default": null
          },
          "zls.build_runner_cache_path": {
            "scope": "resource",
            "type": [
              "string",
              "null"
            ],
            "description": "Path to a directory that will be used as cache when `zig run`ning the build runner",
            "default": null
          },
          "zls.enable_semantic_tokens": {
            "scope": "resource",
            "type": "boolean",
            "description": "Semantic token support",
            "default": true
          },
          "zls.enable_inlay_hints": {
            "scope": "resource",
            "type": "boolean",
            "description": "Inlay hint support",
            "default": false
          },
          "zls.inlay_hints_show_builtin": {
            "scope": "resource",
            "type": "boolean",
            "description": "enable inlay hints for builtin functions",
            "default": true
          },
          "zls.inlay_hints_exclude_single_argument": {
            "scope": "resource",
            "type": "boolean",
            "description": "don't show inlay hints for single argument calls",
            "default": true
          },
          "zls.operator_completions": {
            "scope": "resource",
            "type": "boolean",
            "description": "Whether to enable `*` and `?` operators in completion lists",
            "default": true
          },
          "zls.include_at_in_builtins": {
            "scope": "resource",
            "type": "boolean",
            "description": "Whether the @ sign should be part of the completion of builtins",
            "default": false
          },
          "zls.max_detail_length": {
            "scope": "resource",
            "type": "integer",
            "description": "The detail field of completions is truncated to be no longer than this (in bytes).",
            "default": 1048576
          },
          "zls.skip_std_references": {
            "scope": "resource",
            "type": "boolean",
            "description": "Skips references to std. This will improve lookup speeds. Going to definition however will continue to work",
            "default": false
          },
          "zls.builtin_path": {
            "scope": "resource",
            "type": [
              "string",
              "null"
            ],
            "description": "Path to \"builtin;\" useful for debugging, automatically set if let null",
            "default": null
          }
        }
      }
    ],
    "configurationDefaults": {
      "[zig]": {
        "editor.defaultFormatter": "ikrima.zig",
        "editor.tabSize": 4,
        "editor.autoIndent": "full",
        "editor.detectIndentation": false,
        "editor.insertSpaces": true,
        "files.eol": "\n"
      }
    },
    "commands": [
      {
        "command": "zls.start",
        "title": "start",
        "category": "zls"
      },
      {
        "command": "zls.stop",
        "title": "stop",
        "category": "zls"
      },
      {
        "command": "zls.restart",
        "title": "restart",
        "category": "zls"
      },
      {
        "command": "zig.build.runStep",
        "title": "run build step",
        "category": "zig"
      },
      {
        "command": "zig.build.runLastTarget",
        "title": "build last target",
        "category": "zig"
      },
      {
        "command": "zig.build.getLastTarget",
        "title": "get last picked target or prompt user",
        "category": "zig"
      },
      {
        "command": "zig.runTest",
        "title": "run test",
        "enablement": "zig.hasLastRanTask",
        "category": "zig"
      }
    ]
  },
  "scripts": {
    "compile": "tsc -p tsconfig.json --noEmit",
    "lint": "eslint src --ext ts",
    "esbuild": "esbuild ./src/extension.ts --bundle --outfile=out/bundle.js --tsconfig=./tsconfig.json --external:vscode --format=cjs --platform=node",
    "build": "npm run esbuild -- --sourcemap --sources-content=false",
    "build-prod": "npm run esbuild -- --minify --keep-names",
    "watch": "npm run esbuild -- --sourcemap --sources-content=false --watch",
    "test": "npm run lint && node ./node_modules/vscode/bin/test",
    "clean": "rimraf out",
    "vscode:prepublish": "npm run clean && npm run lint && npm run build-prod",
    "package": "vsce package -o out/%npm_package_name%-%npm_package_version%.vsix",
    "deploy": "npm run package && code --install-extension out/%npm_package_name%-%npm_package_version%.vsix",
    "undeploy": "code --uninstall-extension ikrima.%npm_package_name%"
  },
  "devDependencies": {
    "@types/mocha": "^9.1.1",
    "@types/node": "^16.11.7",
    "@types/vscode": "^1.70.0",
    "@typescript-eslint/eslint-plugin": "^5.33.0",
    "@typescript-eslint/parser": "^5.33.0",
    "@vscode/test-electron": "^2.1.5",
    "esbuild": "^0.15.2",
    "eslint": "^8.21.0",
    "mocha": "^10.0.0",
    "rimraf": "^3.0.2",
    "typescript": "^4.7.4",
    "vsce": "^2.10.0"
  },
  "dependencies": {
    "vscode-languageclient": "^8.0.2"
  }
}