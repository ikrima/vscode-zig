{
  "name": "zig",
  "displayName": "Zig-Fork",
  "description": "Language support for the Zig programming language",
  "version": "0.2.6",
  "publisher": "ikrimae",
  "icon": "images/zig-icon.png",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/ikrima/vscode-zig"
  },
  "engines": {
    "vscode": "^1.58.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [
    "onLanguage:zig"
  ],
  "main": "./out/extension",
  "contributes": {
    "taskDefinitions": [
      {
        "type": "test",
        "properties": {
          "filter": {
            "type": "string",
            "description": "Test name to filter against"
          },
          "args": {
            "type": "string",
            "description": "Additional args to pass \"zig test\""
          },
          "file": {
            "type": "string",
            "description": "The file path to the zig source code to filter the test. Can be omitted."
          },
          "bin": {
            "type": "string",
            "description": "The file path to output the test to. Can be omitted."
          }
        }
      },
      {
        "type": "debug",
        "properties": {
          "filter": {
            "type": "string",
            "description": "Test name to filter against"
          },
          "args": {
            "type": "string",
            "description": "Additional args to pass \"zig test\""
          },
          "file": {
            "type": "string",
            "description": "The file path to the zig source code to filter the test. Can be omitted."
          },
          "bin": {
            "type": "string",
            "description": "The file path to output the test to. Can be omitted."
          },
          "extraFiles": {
            "type": "array",
            "description": "Extra files to pass"
          }
        }
      }
    ],
    "languages": [
      {
        "id": "zig",
        "extensions": [
          ".zig"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "zig",
        "scopeName": "source.zig",
        "path": "./syntaxes/zig.tmLanguage.json"
      }
    ],
    "problemMatchers": [
      {
        "name": "zig",
        "owner": "zig",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "([^\\s]*):(\\d+):(\\d+):\\s+(?:fatal\\s+)?(note|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    ],
    "configuration": {
      "type": "object",
      "title": "zig",
      "properties": {
        "zig.zls.path": {
          "scope": "resource",
          "type": "string",
          "description": "Path to `zls` executable. Example: `C:/zls/zig-cache/bin/zls.exe`."
        },
        "zig.zls.debugLog": {
          "scope": "resource",
          "type": "boolean",
          "description": "Enable debug logging in release builds of zls."
        },
        "zigLanguageClient.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VS Code and the language server."
        },
        "zig.buildOnSave": {
          "type": "boolean",
          "default": false,
          "description": "Compiles code on file save using the settings specified in 'Build Option'."
        },
        "zig.buildOption": {
          "type": "string",
          "default": "build",
          "enum": [
            "build",
            "build-exe",
            "build-lib",
            "build-obj"
          ],
          "description": "Which build command Zig should use to build the code."
        },
        "zig.buildArgs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Extra arguments to passed to Zig."
        },
        "zig.buildFilePath": {
          "type": "string",
          "default": "${workspaceFolder}/build.zig",
          "description": "The path to build.zig. This is only required if zig.buildOptions = build."
        },
        "zig.zigPath": {
          "type": "string",
          "default": null,
          "description": "Set a custom path to the Zig binary. Defaults to 'zig' in your PATH."
        },
        "zig.testBinDir": {
          "type": "string",
          "default": "${workspaceFolder}/zig-out/bin",
          "description": "Test bin output path."
        },
        "zig.testArgs": {
          "type": "string",
          "default": "",
          "description": "Additional flags to pass \"zig test\""
        },
        "zig.testCmd": {
          "type": "string",
          "default": "",
          "editPresentation": "multilineText",
          "title": "Build Test Command",
          "markdownDescription": "Custom command to build a test. Useful if you have non-Zig dependencies or multiple packages.\n\nVariables:\n\n- `${file}`\n- `${filter}`\n- `${bin}`\n\nExample:\n```\nzig build test ${file} --filter ${filter} --bin ${bin}```."
        },
        "zig.beforeDebugCmd": {
          "type": "string",
          "default": "",
          "title": "Debug Test Command",
          "markdownDescription": "Custom command to build a test for debugging. Useful if you have non-Zig dependencies or multiple packages.\n\nVariables:\n\n- `${file}`\n- `${filter}`\n- `${bin}`\n\ne.g.\n```\nzig build test-debug ${file} --filter ${filter} --bin ${bin}```"
        },
        "zig.disableProblemMatcherForTest": {
          "type": "boolean",
          "default": false,
          "description": "Highlight lines where tests failed"
        },
        "zig.revealOutputChannelOnFormattingError": {
          "type": "boolean",
          "default": true,
          "description": "Should output channel be raised on formatting error."
        }
      }
    },
    "commands": [
      {
        "command": "zig.zls.start",
        "title": "Start Zig Language Server",
        "category": "Zig Language Server"
      },
      {
        "command": "zig.zls.stop",
        "title": "Stop Zig Language Server",
        "category": "Zig Language Server"
      },
      {
        "command": "zig.zls.restart",
        "title": "Restart Zig Language Server",
        "category": "Zig Language Server"
      },
      {
        "command": "zig.build.workspace",
        "title": "Zig: Build Workspace",
        "description": "Build the current project using 'zig build'"
      },
      {
        "command": "zig.test.rerun",
        "title": "Zig: Re-run last test",
        "description": "Re-run the last test",
        "enablement": "zig.hasLastTestCommand"
      },
      {
        "command": "zig.test.rerun.debug",
        "title": "Zig: Re-run last test with debugging",
        "description": "Re-run the last test with debugging",
        "enablement": "zig.hasLastTestCommand"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "esbuild  --bundle --sourcemap=external --minify  --external:vscode src/extension.ts --outdir=out --platform=node --format=cjs",
    "watch": "esbuild --watch --bundle --sourcemap=inline --external:vscode src/extension.ts --outdir=out --platform=node --format=cjs",
    "test": "npm run compile && node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "@types/js-yaml": "^4.0.3",
    "@types/mocha": "^2.2.48",
    "@types/node": "^15.6.0",
    "@types/vscode": "^1.58.0",
    "vscode-test": "^1.4.0"
  },
  "dependencies": {
    "esbuild": "^0.12.1",
    "js-yaml": "^4.1.0",
    "lodash-es": "^4.17.21",
    "lodash.debounce": "^4.0.8",
    "qs": "^6.10.1",
    "vsce": "^2.6.4",
    "vscode-languageclient": "^7.0.0-next.9"
  }
}
