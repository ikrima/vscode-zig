{
  "name": "zig",
  "displayName": "Zig-Fork",
  "description": "Language support for the Zig programming language",
  "version": "0.2.7",
  "publisher": "ikrimae",
  "private": true,
  "icon": "images/zig-icon.png",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/ikrima/vscode-zig"
  },
  "engines": {
    "vscode": "^1.64.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [
    "onLanguage:zig"
  ],
  "main": "./out/extension",
  "contributes": {
    "taskDefinitions": [
      {
        "type": "zig",
        "required": [
          "testDebug"
        ],
        "properties": {
          "testDebug": {
            "type": "boolean",
            "description": "Run in debug mode"
          },
          "testFilePath": {
            "type": "string",
            "description": "The file path to the zig source code to filter the test. Can be omitted."
          },
          "testArgs": {
            "type": "array",
            "description": "Additional args to pass \"zig test\""
          },
          "testFilter": {
            "type": "string",
            "description": "Test name to filter against"
          },
          "testMainPkgPath": {
            "type": "string",
            "description": "The file path to output the test to. Can be omitted."
          },
          "testEmitBin": {
            "type": "string",
            "description": "The file path to output the test to. Can be omitted."
          }
        }
      }
    ],
    "languages": [
      {
        "id": "zig",
        "extensions": [
          ".zig"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "zig",
        "scopeName": "source.zig",
        "path": "./syntaxes/zig.tmLanguage.json"
      }
    ],
    "problemMatchers": [
      {
        "name": "zig",
        "owner": "zig",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "([^\\s]*):(\\d+):(\\d+):\\s+(?:fatal\\s+)?(note|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    ],
    "configuration": {
      "type": "object",
      "title": "zig",
      "properties": {
        "zig.zls.path": {
          "scope": "resource",
          "type": "string",
          "description": "Path to `zls` executable. Example: `C:/zls/zig-cache/bin/zls.exe`."
        },
        "zig.zls.debugLog": {
          "scope": "resource",
          "type": "boolean",
          "description": "Enable debug logging in release builds of zls."
        },
        "zlsClient.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VS Code and the language server."
        },
        "zig.buildOnSave": {
          "type": "boolean",
          "default": false,
          "description": "Compiles code on file save using the settings specified in 'Build Option'."
        },
        "zig.buildOption": {
          "type": "string",
          "default": "build",
          "enum": [
            "build",
            "build-exe",
            "build-lib",
            "build-obj"
          ],
          "description": "Which build command Zig should use to build the code."
        },
        "zig.buildArgs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Extra arguments to passed to Zig."
        },
        "zig.buildFilePath": {
          "type": "string",
          "default": "${workspaceFolder}/build.zig",
          "description": "The path to build.zig. This is only required if zig.buildOptions = build."
        },
        "zig.zigPath": {
          "type": "string",
          "default": "zig",
          "description": "Set a custom path to the Zig binary. Defaults to 'zig' in your PATH."
        },
        "zig.testBinDir": {
          "type": "string",
          "default": null,
          "description": "Test bin output path."
        },
        "zig.testArgs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Additional flags to pass \"zig test\""
        },
        "zig.testDbgArgs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "markdownDescription": "Additional flags to to pass \"zig test\" in debug mode"
        },
        "zig.enableProblemMatcherForTest": {
          "type": "boolean",
          "default": true,
          "description": "Highlight lines where tests failed"
        },
        "zig.revealLogOnFormattingError": {
          "type": "boolean",
          "default": true,
          "description": "Should output channel be raised on formatting error."
        }
      }
    },
    "commands": [
      {
        "command": "zig.zls.start",
        "title": "Start Zig Language Server",
        "category": "Zls"
      },
      {
        "command": "zig.zls.stop",
        "title": "Stop Zig Language Server",
        "category": "Zls"
      },
      {
        "command": "zig.zls.restart",
        "title": "Restart Zig Language Server",
        "category": "Zls"
      },
      {
        "command": "zig.build.workspace",
        "title": "Build Zig Workspace",
        "description": "Build the current project using 'zig build'",
        "category": "Zig"
      },
      {
        "command": "zig.test.rerun",
        "title": "Re-run last zig test",
        "description": "Re-run the last test",
        "enablement": "zig.hasLastRanTask",
        "category": "Zig"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "esbuild  --bundle --sourcemap=external --minify  --external:vscode src/extension.ts --outdir=out --platform=node --format=cjs",
    "watch": "esbuild --watch --bundle --sourcemap=inline --external:vscode src/extension.ts --outdir=out --platform=node --format=cjs",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "npm run compile && node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "@types/mocha": "^9.0.0",
    "@types/node": "14.x",
    "@types/vscode": "^1.64.0",
    "@typescript-eslint/eslint-plugin": "^5.9.1",
    "@typescript-eslint/parser": "^5.9.1",
    "@vscode/test-electron": "^2.0.3",
    "@types/js-yaml": "^4.0.3",
    "@types/lodash-es": "^4.17.5",
    "esbuild": "^0.12.1",
    "eslint": "^8.6.0",
    "mocha": "^9.1.3",
    "typescript": "^4.5.4",
    "vsce": "^2.6.7"
  },
  "dependencies": {
    "js-yaml": "^4.1.0",
    "lodash-es": "^4.17.21",
    "vscode-languageclient": "^7.0.0-next.9"
  }
}
